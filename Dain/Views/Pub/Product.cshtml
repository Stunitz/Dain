@using Dain.Models
@model Product

@{
    List<Product> Products = ViewBag.ProductList;
    ViewBag.Title = "Dashboard - Product";
    ViewBag.Name = ViewBag.Name;
    ViewBag.Imagem = ViewBag.Image;
    Layout = "~/Views/Shared/_Layout-Dashboard-Pub.cshtml";
}

<ul class="nav nav-tabs">
    <li class="nav-item">
        <a class="nav-link active" style="color:dodgerblue; cursor: pointer;" onclick="ShowProduct(1)" id="nav2">Products</a>
    </li>
    <li class="nav-item">
        <a class="nav-link " style="color:dodgerblue; cursor: pointer;" onclick="ShowProduct(2)" id="nav1">Register Product</a>
    </li>
</ul>

<div id="showForm" style="display:initial;">

    <div class="line">
        <h5 style="color:dodgerblue;">Products</h5>
    </div>

    <div class="line-np card-deck">
        @foreach (Product product in Products)
        {
            <div class="card col-lg-2" style="min-height:200px; min-width:200px">
                <img class="card-img-top" src="@product.UriImage" alt="Card image cap">
                <div class="card-body">
                    <h5 class="card-title">@product.Name</h5>
                    <p class="card-text">@product.Description</p>
                </div>

                <ul class="list-group list-group-flush">
                    <li class="list-group-item"><b>Price: </b>@product.Price</li>
                </ul>

                <div class="card-body">
                    @*@Html.ActionLink("Change", "Change", "Product", null, null)*@
                    @Html.ActionLink("Delete", "Delete", "Product", new { id = product.Id }, null)
                </div>
            </div>
        }
    </div>
</div>

@using (Html.BeginForm("Register", "Product", FormMethod.Post, new { @class = "form-signin", style = "display:none;", id = "registerForm", enctype = "multipart/form-data" }))
{
    <div class="line">
        <h5 style="color:dodgerblue;">Register Product</h5>
    </div>

    <div class="line">

        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control col-md-5", required = "true", placeholder = "Name" } })
        <br />
        @Html.LabelFor(model => model.Description, new { htmlAttributes = new { @class = "sr-only" } })
        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control col-md-5", required = "true", praceholder = "Description" } })
        <br />
        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control col-md-2", required = "true", placeholder = "Price" } })
        <br />

        <div class="card text-center col-md-4">
            <div class="card-body">

                <img src="~/Content/Preview.png" id="output_image" class="rounded mx-auto d-block img-fluid" style="max-height: 180px; width: auto;" />
                <br />
                <input type="file" accept="image/*" onchange="Preview_image(event)" class="form-control" name="upImage" id="upImage">
                <br />

            </div>
        </div>
        <br />

        <button class="btn btn-outline-dark" type="submit">Registrar</button>
    </div>
}